$.engineer={default_object:{defaults:{},structure:function(){},behavior:function(){}},build:function(a,b){a=$.engineer._find(a);b=$.extend(true,{},a.defaults,b);var c={};new_obj=a.structure.call(c,b);$.extend(new_obj,c);return new_obj},make:function(a,b){a=$.engineer._find(a);var c=$.engineer.build(a,b);$.engineer._applyBehavior(c,a,b);return c},define:function(a,b){this[a]=$.extend(true,{},this.default_object,b)},_find:function(a){var b;b=typeof a=="object"?a:$.engineer[a];if(b==undefined)throw"The definition of '"+
a+"' either failed to define or does not exist.";return b},_applyBehavior:function(a,b,c){c=$.extend(true,{},b.defaults,c);b=b.behavior.call(a,c);a.data("publicMethods",b);return a},_transform:function(a,b,c,d){var e=$.engineer._find(b);a.each(function(i,f){f=$(f);var h={};for(var g in e.defaults)if(f.attr(g))h[g]=f.attr(g);g=$.extend(true,{},h,d);f=c(f,e,g);a[i]=f[0]});return a}};
(function(a){a.fn.makeInto=function(b){return a.engineer._transform(this,b,function(c,d,e){d=a.engineer.make(d,e);c.before(d).remove();return d})};a.fn.behaveLike=function(b,c){return a.engineer._transform(this,b,a.engineer._applyBehavior,c)};a.fn.send=function(b){for(var c=[],d=0;d<arguments.length;){j=d++;c[j]=arguments[d]}return this.each(function(){var e=a(this).data("publicMethods");if(e)(method=e[b])&&method.apply(method,c)})}})(jQuery);
